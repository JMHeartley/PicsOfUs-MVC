@model PicsOfUs.Models.PicFormViewModel

@{
    ViewBag.Title = (Model.Pic.Id == 0) ? "Upload Pic(s)" : "Edit Pic";
}

<div class="d-flex align-items-stretch">
    <div class="col">
        <img src="@Model.Pic.Url" alt="Pic Preview Thumbnail" class="image-fluid red-border" id="preview-image">
    </div>
    <div class="col">
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-dismissible alert-danger">
                @TempData["Error"]
            </div>
        }
        @using (Html.BeginForm("Save", "Browse", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="form-group">
                @Html.TextBoxFor(m => m.File, new { @class = "form-control-file", type = "file" })
                @Html.ValidationMessageFor(m => m.File, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(p => p.Pic.Caption)
                @Html.TextBoxFor(p => p.Pic.Caption, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(p => p.Pic.CaptureDate)
                <div class="form-group">
                    <div class="input-group mb-3 date" data-provide="datepicker">
                        <span class="input-group-text">
                            <i class="far fa-calendar-alt"></i>
                        </span>
                        @Html.TextBoxFor(p => p.Pic.CaptureDate, "{0:MM/dd/yyyy}", new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <label>Subjects</label>
            <div class="overflow-auto mb-3 px-3 member-select-overflow border border-light rounded">
                @Html.EditorFor(m => m.Members)
            </div>
            @Html.ActionLink("Add a new member?", "New", "Member", null, new { @class = "btn btn-primary my-3" })
            @Html.HiddenFor(m => m.Pic.Id)
            @Html.HiddenFor(m => m.Pic.Url)
            @Html.AntiForgeryToken()

            <button type="submit" class="btn btn-primary">Save</button>
        }
    </div>
</div>